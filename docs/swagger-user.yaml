basePath: /api/v1
definitions:
  lib.Response:
    properties:
      message:
        description: response message
        type: string
      status:
        description: http status
        type: integer
    type: object
  model.Asset:
    properties:
      absolute_path:
        description: AbsolutePath
        example: image.png
        type: string
      additional:
        type: string
      creator_id:
        description: creator id
        format: uuid
        type: string
      description:
        description: Description
        example: string
        type: string
      file_path:
        description: File Path
        type: string
      file_size:
        description: File Size
        format: float
        type: number
      filename:
        description: Filename
        example: image.png
        type: string
      modifier_id:
        description: modifier id
        format: uuid
        type: string
      original_filename:
        description: OriginalFilename
        example: image.png
        type: string
      relative_path:
        description: RelativePath
        example: image.png
        type: string
      title:
        description: Title
        example: Image
        type: string
    type: object
  model.Business:
    properties:
      additional:
        type: string
      business_location:
        $ref: '#/definitions/model.BusinessLocation'
      business_name:
        type: string
      business_setting:
        $ref: '#/definitions/model.BusinessSetting'
      creator_id:
        description: creator id
        format: uuid
        type: string
      is_active:
        type: boolean
      join_date:
        format: date-time
        type: string
      modifier_id:
        description: modifier id
        format: uuid
        type: string
      owner_id:
        type: string
    type: object
  model.BusinessLocation:
    properties:
      additional:
        type: string
      address:
        description: Address
        example: Jalan Utama No. 123
        type: string
      alternate_number:
        description: Alternate Number
        example: 555-1234
        type: string
      asset:
        $ref: '#/definitions/model.Asset'
      asset_id:
        description: Asset ID
        format: uuid
        type: string
      city_id:
        description: City ID
        type: integer
      creator_id:
        description: creator id
        format: uuid
        type: string
      email:
        description: Email
        example: contoh@mail.com
        type: string
      google_map_link:
        description: Google Map Link
        example: https://maps.google.com/contoh
        type: string
      is_active:
        description: Is Active
        example: true
        type: boolean
      latitude:
        description: Latitude
        example: "12.345678"
        type: string
      longitude:
        description: Longitude
        example: "98.765432"
        type: string
      mobile:
        description: Mobile
        example: "081234567890"
        type: string
      modifier_id:
        description: modifier id
        format: uuid
        type: string
      name:
        description: Name
        example: Toko Contoh
        type: string
      province_id:
        description: Province ID
        type: integer
      receipt_notes:
        description: Receipt Notes
        example: '@sloji___'
        type: string
      subdistrict_id:
        description: Subdistrict ID
        type: integer
      website:
        description: Website
        example: https://www.contoh.com
        type: string
      zip_code:
        description: Zip Code
        example: "12345"
        type: string
    type: object
  model.BusinessScope:
    properties:
      additional:
        type: string
      code:
        description: Code
        type: integer
      creator_id:
        description: creator id
        format: uuid
        type: string
      modifier_id:
        description: modifier id
        format: uuid
        type: string
      name:
        description: Name
        example: Cafe
        type: string
    type: object
  model.BusinessSetting:
    properties:
      additional:
        type: string
      business_id:
        description: BusinessID
        format: uuid
        type: string
      business_scope:
        $ref: '#/definitions/model.BusinessScope'
      business_scope_id:
        description: BusinessScopeID
        type: string
      closed_bill_time:
        description: ClosedBillTime
        type: string
      currency_id:
        description: CurrencyID
        type: string
      default_profit_percent:
        description: DefaultProfitPercent
        type: number
      prefix:
        allOf:
        - $ref: '#/definitions/model.PrefixSetting'
        description: Prefix
      time_zone:
        description: TimeZone
        type: string
    type: object
  model.City:
    properties:
      additional:
        type: string
      creator_id:
        description: creator id
        format: uuid
        type: string
      id:
        description: model ID
        type: integer
      modifier_id:
        description: modifier id
        format: uuid
        type: string
      name:
        example: Joe
        type: string
      province_id:
        type: integer
    type: object
  model.Employee:
    properties:
      additional:
        type: string
      address:
        description: Address
        example: Solo
        type: string
      alternate_number:
        description: Alternate Number
        type: string
      asset_id:
        description: Asset ID
        format: uuid
        type: string
      business_id:
        description: Business ID
        format: uuid
        type: string
      business_location_id:
        description: Business Location ID
        format: uuid
        type: string
      city:
        $ref: '#/definitions/model.City'
      city_id:
        description: City ID
        type: integer
      creator_id:
        description: creator id
        format: uuid
        type: string
      date_of_birth:
        description: Date Of Birth
        format: date
        type: string
      email:
        description: Email
        type: string
      employee_code:
        description: EmployeeCode
        example: AAAA
        type: string
      first_name:
        description: First Name
        example: Joe
        type: string
      gender:
        description: Gender
        example: Male
        type: string
      join_date:
        description: Join Date
        format: date-time
        type: string
      last_name:
        description: Last Name
        example: Son
        type: string
      marital_status:
        description: Marital Status
        example: Married
        type: string
      middle_name:
        description: Middle Name
        example: Faa
        type: string
      mobile:
        description: Mobile
        type: string
      modifier_id:
        description: modifier id
        format: uuid
        type: string
      province:
        $ref: '#/definitions/model.Province'
      province_id:
        description: Province ID
        type: integer
      subdistrict:
        $ref: '#/definitions/model.Subdistrict'
      subdistrict_id:
        description: Subdistrict ID
        type: integer
      zip_code:
        description: Zip Code
        example: "57422"
        type: string
    type: object
  model.Group:
    properties:
      additional:
        type: string
      business_id:
        format: uuid
        type: string
      code:
        example: ADM
        type: string
      creator_id:
        description: creator id
        format: uuid
        type: string
      is_default:
        example: true
        type: boolean
      modifier_id:
        description: modifier id
        format: uuid
        type: string
      name:
        example: Admin
        type: string
    type: object
  model.LoginAPI:
    properties:
      device_token:
        example: <device-token>
        type: string
      password:
        example: '@Password123'
        type: string
      remember:
        example: true
        type: boolean
      username:
        example: john.doe@mail.com
        type: string
    required:
    - password
    - username
    type: object
  model.LogoutAPI:
    properties:
      device_token:
        example: <device-token>
        type: string
      username:
        example: john.doe@mail.com
        type: string
    required:
    - device_token
    - username
    type: object
  model.PrefixSetting:
    additionalProperties:
      type: string
    type: object
  model.Province:
    properties:
      additional:
        type: string
      creator_id:
        description: creator id
        format: uuid
        type: string
      id:
        description: model ID
        type: integer
      modifier_id:
        description: modifier id
        format: uuid
        type: string
      name:
        example: Joe
        type: string
    type: object
  model.RegistrationAPI:
    properties:
      confirm_password:
        example: '@Password123'
        type: string
      email:
        example: john.doe@mail.com
        type: string
      fullname:
        example: John doe
        type: string
      password:
        example: '@Password123'
        minLength: 8
        type: string
      referral_code:
        example: E6So5no5
        type: string
    required:
    - confirm_password
    - email
    - fullname
    - password
    type: object
  model.SendVerificationAccountAPI:
    properties:
      email:
        example: john.doe@mail.com
        type: string
    required:
    - email
    type: object
  model.SettingUpAPI:
    properties:
      business_location_name:
        example: Toko KasirKita
        type: string
      business_scope_id:
        format: uuid
        type: string
      city_id:
        example: 445
        type: integer
      owner_email:
        example: john.doe@mail.com
        type: string
      owner_name:
        example: John Doe
        type: string
      province_id:
        example: 10
        type: integer
      subdistrict_id:
        example: 6164
        type: integer
    required:
    - business_location_name
    - business_scope_id
    - city_id
    - owner_email
    - owner_name
    - province_id
    - subdistrict_id
    type: object
  model.Subdistrict:
    properties:
      additional:
        type: string
      city_id:
        type: integer
      creator_id:
        description: creator id
        format: uuid
        type: string
      id:
        description: model ID
        type: integer
      modifier_id:
        description: modifier id
        format: uuid
        type: string
      name:
        example: Joe
        type: string
      province_id:
        type: integer
    type: object
  model.UpdateProfileAPI:
    properties:
      address:
        description: Address
        example: Jl. Pegangsaan Timur No. 56
        type: string
      alternate_number:
        description: Alternate NumberAssetID          *uuid.UUID   `json:"asset_id,omitempty"
          swaggertype:"string" format:"uuid"`                                  //
          AssetID
        example: "08123456789"
        type: string
      asset_id:
        type: string
      city_id:
        description: CityID
        type: integer
      confirm_password:
        description: ConfirmPassword
        example: '@Password1234'
        type: string
      email:
        description: Email
        example: john.doe@mail.com
        type: string
      fullname:
        description: Fullname
        example: John Doe
        type: string
      gender:
        description: 'Gender : male | female | rather_not_say'
        enum:
        - male
        - female
        - rather_not_say
        example: male
        type: string
      is_change_password:
        description: IsChangePassword
        example: true
        type: boolean
      marital_status:
        description: 'MaritalStatus : married | unmarried | divorced'
        enum:
        - married
        - unmarried
        - divorced
        example: married
        type: string
      mobile:
        description: Mobile
        example: "08123456789"
        type: string
      new_password:
        description: NewPassword
        example: '@Password1234'
        type: string
      old_password:
        description: OldPassword
        example: '@Password123'
        type: string
      province_id:
        description: ProvinceID
        type: integer
      subdistrict_id:
        description: SubdistrictID
        type: integer
      username:
        description: Username
        example: johndoe
        type: string
      zip_code:
        description: Address
        example: "57588"
        type: string
    type: object
  model.User:
    properties:
      activated_at:
        format: date-time
        type: string
      additional:
        type: string
      asset:
        $ref: '#/definitions/model.Asset'
      asset_id:
        type: string
      business:
        $ref: '#/definitions/model.Business'
      business_id:
        type: string
      creator_id:
        description: creator id
        format: uuid
        type: string
      email:
        type: string
      employee:
        $ref: '#/definitions/model.Employee'
      employee_id:
        type: string
      fullname:
        type: string
      group:
        $ref: '#/definitions/model.Group'
      group_id:
        type: string
      is_activated:
        type: boolean
      is_owner:
        type: boolean
      is_password_system_generated:
        type: boolean
      is_verified:
        type: boolean
      last_login:
        format: date-time
        type: string
      mobile:
        type: string
      modifier_id:
        description: modifier id
        format: uuid
        type: string
      otp_enabled:
        type: boolean
      otp_expiration:
        format: date-time
        type: string
      password_expiration:
        format: date-time
        type: string
      password_last_change:
        format: date-time
        type: string
      reset_password_expiration:
        format: date-time
        type: string
      username:
        type: string
      verification_expiration:
        format: date-time
        type: string
    type: object
  model.UserAPI:
    properties:
      activated_at:
        format: date-time
        type: string
      asset_id:
        type: string
      business_id:
        type: string
      email:
        type: string
      employee_id:
        type: string
      fullname:
        type: string
      group_id:
        type: string
      is_activated:
        type: boolean
      is_owner:
        type: boolean
      is_password_system_generated:
        type: boolean
      is_verified:
        type: boolean
      last_login:
        format: date-time
        type: string
      mobile:
        type: string
      otp_enabled:
        type: boolean
      otp_expiration:
        format: date-time
        type: string
      password_expiration:
        format: date-time
        type: string
      password_last_change:
        format: date-time
        type: string
      reset_password_expiration:
        format: date-time
        type: string
      username:
        type: string
      verification_expiration:
        format: date-time
        type: string
    type: object
  model.VerificationAccountAPI:
    properties:
      email:
        example: john.doe@mail.com
        type: string
      verification_code:
        example: "7085"
        type: string
    required:
    - email
    - verification_code
    type: object
host: localhost:8002
info:
  contact:
    email: developer@mail.com
    name: Developer
  description: API Documentation
  termsOfService: https://dospecs.monstercode.net/en/guide/tnc.html
  title: User Services
  version: 1.0.0
paths:
  /:
    get:
      consumes:
      - application/json
      description: show basic response
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/lib.Response'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/lib.Response'
        "404":
          description: not found
          schema:
            $ref: '#/definitions/lib.Response'
        "409":
          description: conflict
          schema:
            $ref: '#/definitions/lib.Response'
        "500":
          description: internal error
          schema:
            $ref: '#/definitions/lib.Response'
      summary: show basic response
      tags:
      - API
  /account/login:
    post:
      description: Generate token at the same time subscribe FCM services
      parameters:
      - description: Payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.LoginAPI'
      responses:
        "200":
          description: Logedin
          schema:
            $ref: '#/definitions/model.LoginAPI'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/lib.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/lib.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/lib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.Response'
      security:
      - TokenKey: []
      summary: Generate token at the same time subscribe FCM services
      tags:
      - Account
  /account/logout:
    post:
      description: Logout from device at the same time un-subscribe FCM services
      parameters:
      - description: Payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.LogoutAPI'
      responses:
        "200":
          description: Logedout
          schema:
            $ref: '#/definitions/model.LogoutAPI'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/lib.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/lib.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/lib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.Response'
      security:
      - ApiKeyAuth: []
      summary: Logout from device at the same time un-subscribe FCM services
      tags:
      - Account
  /account/register:
    post:
      description: Registration
      parameters:
      - description: Payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.RegistrationAPI'
      responses:
        "200":
          description: registered
          schema:
            $ref: '#/definitions/lib.Response'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/lib.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/lib.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/lib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.Response'
      security:
      - TokenKey: []
      summary: Registration
      tags:
      - Account
  /account/send-verify-account-code:
    post:
      description: Resend Code Verify account
      parameters:
      - description: Payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SendVerificationAccountAPI'
      responses:
        "200":
          description: Account verified
          schema:
            $ref: '#/definitions/model.UserAPI'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/lib.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/lib.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/lib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.Response'
      security:
      - TokenKey: []
      summary: Resend Code Verify account
      tags:
      - Account
  /account/setting-up-account:
    post:
      description: Setting Up Account
      parameters:
      - description: Payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SettingUpAPI'
      responses:
        "200":
          description: registered
          schema:
            $ref: '#/definitions/lib.Response'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/lib.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/lib.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/lib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.Response'
      security:
      - TokenKey: []
      summary: Setting Up Account
      tags:
      - Account
  /account/verify-account:
    post:
      description: Verify account
      parameters:
      - description: Payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.VerificationAccountAPI'
      responses:
        "200":
          description: Account verified
          schema:
            $ref: '#/definitions/model.UserAPI'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/lib.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/lib.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/lib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.Response'
      security:
      - TokenKey: []
      summary: Verify account
      tags:
      - Account
  /info.json:
    get:
      consumes:
      - application/json
      description: show info response
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            additionalProperties: true
            type: object
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/lib.Response'
        "404":
          description: not found
          schema:
            $ref: '#/definitions/lib.Response'
        "409":
          description: conflict
          schema:
            $ref: '#/definitions/lib.Response'
        "500":
          description: internal error
          schema:
            $ref: '#/definitions/lib.Response'
      summary: show info response
      tags:
      - API
  /profile:
    get:
      description: Get profile
      responses:
        "200":
          description: Profile
          schema:
            $ref: '#/definitions/model.User'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/lib.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/lib.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/lib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.Response'
      security:
      - ApiKeyAuth: []
      summary: Get profile
      tags:
      - Profile
    put:
      consumes:
      - application/json
      description: Update Profile
      parameters:
      - description: Employee data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.UpdateProfileAPI'
      produces:
      - application/json
      responses:
        "201":
          description: Employee data
          schema:
            $ref: '#/definitions/model.Employee'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/lib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/lib.Response'
      security:
      - ApiKeyAuth: []
      summary: Update Profile
      tags:
      - Profile
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  TokenKey:
    in: header
    name: x-Token
    type: apiKey
swagger: "2.0"
