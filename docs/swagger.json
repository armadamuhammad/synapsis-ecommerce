{
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "API Documentation",
        "title": "Transaction Services",
        "termsOfService": "https://dospecs.monstercode.net/en/guide/tnc.html",
        "contact": {
            "name": "Developer",
            "email": "developer@mail.com"
        },
        "version": "1.0.0"
    },
    "host": "kasirdev.monstercode.net",
    "basePath": "/api/v1/transaction",
    "paths": {
        "/": {
            "get": {
                "description": "show basic response",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API"
                ],
                "summary": "show basic response",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/info.json": {
            "get": {
                "description": "show info response",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API"
                ],
                "summary": "show info response",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/transactions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List of Transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "List of Transaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number start from zero",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size per page, default `0`",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by field, adding dash (`-`) at the beginning means descending and vice versa",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Select specific fields with comma separated",
                        "name": "fields",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "custom filters, see [more details](https://github.com/morkid/paginate#filter-format)",
                        "name": "filters",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Transaction",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/lib.Page"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Transaction"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/transactions/expense": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create new Transaction Expense",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Create new Transaction Expense",
                "parameters": [
                    {
                        "description": "Transaction data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TransactionIncomeAPI"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Transaction data",
                        "schema": {
                            "$ref": "#/definitions/model.TransactionIncomeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/transactions/income": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create new Transaction Income",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Create new Transaction Income",
                "parameters": [
                    {
                        "description": "Transaction data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TransactionIncomeAPI"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Transaction data",
                        "schema": {
                            "$ref": "#/definitions/model.TransactionIncomeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/transactions/purchase-line": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create new Transaction Purchase Line",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Create new Transaction Purchase Line",
                "parameters": [
                    {
                        "description": "Transaction data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TransactionPurchaseLinePayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Transaction data",
                        "schema": {
                            "$ref": "#/definitions/model.TransactionPurchaseLineResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/transactions/sell-line": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create new Transaction Sell Line",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Create new Transaction Sell Line",
                "parameters": [
                    {
                        "description": "Transaction data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TransactionSellLinePayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Transaction data",
                        "schema": {
                            "$ref": "#/definitions/model.TransactionSellLineResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/transactions/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a Transaction by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Get a Transaction by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction data",
                        "schema": {
                            "$ref": "#/definitions/model.Transaction"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/transactions/{id}/payment": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a Transaction Payemnt by transaction id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TransactionPayment"
                ],
                "summary": "Get a Transaction Payemnt by transaction id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction data",
                        "schema": {
                            "$ref": "#/definitions/model.Transaction"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create new Transaction Sell Line",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TransactionPayment"
                ],
                "summary": "Create new Transaction Sell Line",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transaction data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PaymentTransactionAPI"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Transaction data",
                        "schema": {
                            "$ref": "#/definitions/model.PaymentTransaction"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/transactions/{id}/payment/{payment_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a  single Transaction Payment by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TransactionPayment"
                ],
                "summary": "Get a  single Transaction Payment by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Payment ID",
                        "name": "payment_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction Payment data",
                        "schema": {
                            "$ref": "#/definitions/model.PaymentTransaction"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/transactions/{id}/status/{status}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update Transaction Status by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Update Transaction Status by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Status Transaction",
                        "name": "status",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/transactions/{id}/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update Transaction Draft",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Update Transaction Draft",
                "parameters": [
                    {
                        "description": "Transaction data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TransactionUpdate"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Transaction data",
                        "schema": {
                            "$ref": "#/definitions/model.Transaction"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "lib.Page": {
            "type": "object",
            "properties": {
                "first": {
                    "description": "indicate first value",
                    "type": "boolean",
                    "example": true
                },
                "items": {
                    "type": "object"
                },
                "last": {
                    "description": "indicate last value",
                    "type": "boolean",
                    "example": false
                },
                "max_page": {
                    "description": "maximum pages for current schema",
                    "type": "integer",
                    "example": 9
                },
                "page": {
                    "description": "current page, start from zero",
                    "type": "integer",
                    "example": 0
                },
                "size": {
                    "description": "size per page, default `10`",
                    "type": "integer",
                    "example": 10
                },
                "total": {
                    "description": "total data without filters",
                    "type": "integer",
                    "example": 100
                },
                "total_pages": {
                    "description": "total pages",
                    "type": "integer",
                    "example": 10
                },
                "visible": {
                    "description": "current length",
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "lib.Response": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "response message",
                    "type": "string"
                },
                "status": {
                    "description": "http status",
                    "type": "integer"
                }
            }
        },
        "model.PaymentTransaction": {
            "type": "object",
            "required": [
                "payment_type",
                "transaction_status"
            ],
            "properties": {
                "additional": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "approval_code": {
                    "type": "string"
                },
                "approval_local_timestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "approval_timestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "comment": {
                    "type": "string"
                },
                "currency_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "description": {
                    "type": "string"
                },
                "partner_transaction_number": {
                    "type": "string"
                },
                "partner_transaction_status": {
                    "type": "string"
                },
                "payment_gateway_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "payment_type": {
                    "type": "string",
                    "enum": [
                        "cash",
                        "cashless"
                    ]
                },
                "reference_number": {
                    "type": "string",
                    "format": "uuid"
                },
                "transaction_id": {
                    "type": "string"
                },
                "transaction_number": {
                    "type": "string"
                },
                "transaction_status": {
                    "type": "string",
                    "enum": [
                        "paid",
                        "due",
                        "partial"
                    ]
                },
                "transaction_timestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "transaction_type": {
                    "type": "string"
                }
            }
        },
        "model.PaymentTransactionAPI": {
            "type": "object",
            "required": [
                "payment_type",
                "transaction_status"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "approval_code": {
                    "type": "string"
                },
                "approval_local_timestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "approval_timestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "comment": {
                    "type": "string"
                },
                "currency_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "description": {
                    "type": "string"
                },
                "partner_transaction_number": {
                    "type": "string"
                },
                "partner_transaction_status": {
                    "type": "string"
                },
                "payment_gateway_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "payment_type": {
                    "type": "string",
                    "enum": [
                        "cash",
                        "cashless"
                    ]
                },
                "reference_number": {
                    "type": "string",
                    "format": "uuid"
                },
                "transaction_id": {
                    "type": "string"
                },
                "transaction_number": {
                    "type": "string"
                },
                "transaction_status": {
                    "type": "string",
                    "enum": [
                        "paid",
                        "due",
                        "partial"
                    ]
                },
                "transaction_timestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "transaction_type": {
                    "type": "string"
                }
            }
        },
        "model.Transaction": {
            "type": "object",
            "required": [
                "payment_status",
                "status_transaction",
                "type"
            ],
            "properties": {
                "additional": {
                    "type": "string"
                },
                "business_id": {
                    "description": "Business ID",
                    "type": "string",
                    "format": "uuid"
                },
                "business_location_id": {
                    "description": "Business Location ID",
                    "type": "string",
                    "format": "uuid"
                },
                "contact_id": {
                    "description": "Contact ID",
                    "type": "string",
                    "format": "uuid"
                },
                "contact_mobile": {
                    "type": "string",
                    "example": "089123456789"
                },
                "contact_name": {
                    "type": "string",
                    "example": "alan"
                },
                "flow": {
                    "description": "Flow is filled by status transaction",
                    "type": "string",
                    "example": "draft|ordered|cancel"
                },
                "invoice_no": {
                    "description": "Invoice No",
                    "type": "string",
                    "example": "AS134412"
                },
                "is_recurring": {
                    "type": "boolean"
                },
                "notes": {
                    "type": "string"
                },
                "opening_stock_product_id": {
                    "description": "Opening Stock Product ID",
                    "type": "string",
                    "format": "uuid"
                },
                "payment_status": {
                    "description": "Payment Status",
                    "type": "string",
                    "enum": [
                        "paid",
                        "due",
                        "partial"
                    ],
                    "example": "paid"
                },
                "promo_amount": {
                    "description": "Tax Amount",
                    "type": "number",
                    "example": 10
                },
                "promo_id": {
                    "description": "Promo ID",
                    "type": "string",
                    "format": "uuid"
                },
                "promo_name": {
                    "description": "Promo Amount",
                    "type": "string",
                    "example": "Weekend Special"
                },
                "promo_type": {
                    "description": "Promo Amount",
                    "type": "string",
                    "enum": [
                        "fixed",
                        "percentage"
                    ],
                    "example": "percentage"
                },
                "purchase_order": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TransactionPurchaseLine"
                    }
                },
                "recur_interval": {
                    "type": "integer"
                },
                "recur_repeat_on": {
                    "type": "string",
                    "enum": [
                        "Day",
                        "Week",
                        "Month",
                        "Year"
                    ],
                    "example": "Day"
                },
                "recur_repetition": {
                    "type": "integer"
                },
                "recur_stopped_on": {
                    "type": "string",
                    "format": "date-time"
                },
                "references_no": {
                    "description": "References No",
                    "type": "string",
                    "example": "11"
                },
                "sell_line": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TransactionSellLine"
                    }
                },
                "status_transaction": {
                    "description": "Status Transaction",
                    "type": "string",
                    "enum": [
                        "draft",
                        "waiting",
                        "paid",
                        "ordered",
                        "ready_to_shipping",
                        "shipping",
                        "arrived",
                        "received",
                        "done",
                        "pending",
                        "cancel",
                        "refuse",
                        "expired"
                    ],
                    "example": "waiting"
                },
                "tax_amount": {
                    "description": "Tax Amount",
                    "type": "number",
                    "example": 10
                },
                "tax_id": {
                    "description": "Tax ID",
                    "type": "string",
                    "format": "uuid"
                },
                "tax_name": {
                    "description": "Tax Amount",
                    "type": "string",
                    "example": "PPN 10%"
                },
                "total_pay": {
                    "description": "Total Price",
                    "type": "number",
                    "example": 50000
                },
                "total_price": {
                    "description": "Total Price",
                    "type": "number",
                    "example": 50000
                },
                "total_price_before": {
                    "description": "Total Price Before",
                    "type": "number",
                    "example": 1000
                },
                "transaction_category_id": {
                    "description": "Business Location ID",
                    "type": "string",
                    "format": "uuid"
                },
                "transaction_date": {
                    "description": "Transaction Date",
                    "type": "string",
                    "format": "date-time"
                },
                "transaction_payment": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.PaymentTransaction"
                    }
                },
                "type": {
                    "description": "Type",
                    "type": "string",
                    "enum": [
                        "opening_stock",
                        "purchase",
                        "sell",
                        "income",
                        "expense",
                        "subscription"
                    ],
                    "example": "sell"
                }
            }
        },
        "model.TransactionAPI": {
            "type": "object",
            "required": [
                "payment_status",
                "status_transaction",
                "type"
            ],
            "properties": {
                "business_id": {
                    "description": "Business ID",
                    "type": "string",
                    "format": "uuid"
                },
                "business_location_id": {
                    "description": "Business Location ID",
                    "type": "string",
                    "format": "uuid"
                },
                "contact_id": {
                    "description": "Contact ID",
                    "type": "string",
                    "format": "uuid"
                },
                "contact_mobile": {
                    "type": "string",
                    "example": "089123456789"
                },
                "contact_name": {
                    "type": "string",
                    "example": "alan"
                },
                "flow": {
                    "description": "Flow is filled by status transaction",
                    "type": "string",
                    "example": "draft|ordered|cancel"
                },
                "invoice_no": {
                    "description": "Invoice No",
                    "type": "string",
                    "example": "AS134412"
                },
                "is_recurring": {
                    "type": "boolean"
                },
                "notes": {
                    "type": "string"
                },
                "opening_stock_product_id": {
                    "description": "Opening Stock Product ID",
                    "type": "string",
                    "format": "uuid"
                },
                "payment_status": {
                    "description": "Payment Status",
                    "type": "string",
                    "enum": [
                        "paid",
                        "due",
                        "partial"
                    ],
                    "example": "paid"
                },
                "promo_amount": {
                    "description": "Tax Amount",
                    "type": "number",
                    "example": 10
                },
                "promo_id": {
                    "description": "Promo ID",
                    "type": "string",
                    "format": "uuid"
                },
                "promo_name": {
                    "description": "Promo Amount",
                    "type": "string",
                    "example": "Weekend Special"
                },
                "promo_type": {
                    "description": "Promo Amount",
                    "type": "string",
                    "enum": [
                        "fixed",
                        "percentage"
                    ],
                    "example": "percentage"
                },
                "recur_interval": {
                    "type": "integer"
                },
                "recur_repeat_on": {
                    "type": "string",
                    "enum": [
                        "Day",
                        "Week",
                        "Month",
                        "Year"
                    ],
                    "example": "Day"
                },
                "recur_repetition": {
                    "type": "integer"
                },
                "recur_stopped_on": {
                    "type": "string",
                    "format": "date-time"
                },
                "references_no": {
                    "description": "References No",
                    "type": "string",
                    "example": "11"
                },
                "status_transaction": {
                    "description": "Status Transaction",
                    "type": "string",
                    "enum": [
                        "draft",
                        "waiting",
                        "paid",
                        "ordered",
                        "ready_to_shipping",
                        "shipping",
                        "arrived",
                        "received",
                        "done",
                        "pending",
                        "cancel",
                        "refuse",
                        "expired"
                    ],
                    "example": "waiting"
                },
                "tax_amount": {
                    "description": "Tax Amount",
                    "type": "number",
                    "example": 10
                },
                "tax_id": {
                    "description": "Tax ID",
                    "type": "string",
                    "format": "uuid"
                },
                "tax_name": {
                    "description": "Tax Amount",
                    "type": "string",
                    "example": "PPN 10%"
                },
                "total_pay": {
                    "description": "Total Price",
                    "type": "number",
                    "example": 50000
                },
                "total_price": {
                    "description": "Total Price",
                    "type": "number",
                    "example": 50000
                },
                "total_price_before": {
                    "description": "Total Price Before",
                    "type": "number",
                    "example": 1000
                },
                "transaction_category_id": {
                    "description": "Business Location ID",
                    "type": "string",
                    "format": "uuid"
                },
                "transaction_date": {
                    "description": "Transaction Date",
                    "type": "string",
                    "format": "date-time"
                },
                "type": {
                    "description": "Type",
                    "type": "string",
                    "enum": [
                        "opening_stock",
                        "purchase",
                        "sell",
                        "income",
                        "expense",
                        "subscription"
                    ],
                    "example": "sell"
                }
            }
        },
        "model.TransactionIncomeAPI": {
            "type": "object",
            "properties": {
                "payment": {
                    "$ref": "#/definitions/model.PaymentTransactionAPI"
                },
                "transaction": {
                    "$ref": "#/definitions/model.TransactionAPI"
                }
            }
        },
        "model.TransactionIncomeResponse": {
            "type": "object",
            "properties": {
                "payment": {
                    "$ref": "#/definitions/model.PaymentTransaction"
                },
                "transaction": {
                    "$ref": "#/definitions/model.Transaction"
                }
            }
        },
        "model.TransactionPurchaseLine": {
            "type": "object",
            "properties": {
                "additional": {
                    "type": "string"
                },
                "product_id": {
                    "description": "ProductID ID",
                    "type": "string",
                    "format": "uuid"
                },
                "product_name": {
                    "description": "Product Name",
                    "type": "string",
                    "example": "Samsung"
                },
                "promo_amount": {
                    "description": "Tax Amount",
                    "type": "number",
                    "example": 10
                },
                "promo_name": {
                    "description": "Promo Name",
                    "type": "string",
                    "example": "Promo akhir bulan"
                },
                "promo_type": {
                    "description": "Promo Type (e.g : 'fixed', 'percentage')",
                    "type": "string",
                    "example": "fixed"
                },
                "qty": {
                    "description": "Qty",
                    "type": "integer"
                },
                "stock_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "sub_unit_price": {
                    "type": "number"
                },
                "tax_amount": {
                    "description": "Tax Amount",
                    "type": "number",
                    "example": 10
                },
                "tax_name": {
                    "description": "Tax Name",
                    "type": "string",
                    "example": "Ppn 10%"
                },
                "transaction_id": {
                    "description": "Transaction ID",
                    "type": "string",
                    "format": "uuid"
                },
                "type": {
                    "description": "Type (e.g : 'custom','single','variation')",
                    "type": "string"
                },
                "unit_price": {
                    "description": "Unit Price",
                    "type": "number",
                    "example": 5000
                },
                "unit_price_before": {
                    "description": "Unit Price Before",
                    "type": "number",
                    "example": 5000
                }
            }
        },
        "model.TransactionPurchaseLineAPI": {
            "type": "object",
            "properties": {
                "product_id": {
                    "description": "ProductID ID",
                    "type": "string",
                    "format": "uuid"
                },
                "product_name": {
                    "description": "Product Name",
                    "type": "string",
                    "example": "Samsung"
                },
                "promo_amount": {
                    "description": "Tax Amount",
                    "type": "number",
                    "example": 10
                },
                "promo_name": {
                    "description": "Promo Name",
                    "type": "string",
                    "example": "Promo akhir bulan"
                },
                "promo_type": {
                    "description": "Promo Type (e.g : 'fixed', 'percentage')",
                    "type": "string",
                    "example": "fixed"
                },
                "qty": {
                    "description": "Qty",
                    "type": "integer"
                },
                "stock_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "sub_unit_price": {
                    "type": "number"
                },
                "tax_amount": {
                    "description": "Tax Amount",
                    "type": "number",
                    "example": 10
                },
                "tax_name": {
                    "description": "Tax Name",
                    "type": "string",
                    "example": "Ppn 10%"
                },
                "transaction_id": {
                    "description": "Transaction ID",
                    "type": "string",
                    "format": "uuid"
                },
                "type": {
                    "description": "Type (e.g : 'custom','single','variation')",
                    "type": "string"
                },
                "unit_price": {
                    "description": "Unit Price",
                    "type": "number",
                    "example": 5000
                },
                "unit_price_before": {
                    "description": "Unit Price Before",
                    "type": "number",
                    "example": 5000
                }
            }
        },
        "model.TransactionPurchaseLinePayload": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TransactionPurchaseLineAPI"
                    }
                },
                "payment": {
                    "$ref": "#/definitions/model.PaymentTransactionAPI"
                },
                "transaction": {
                    "$ref": "#/definitions/model.TransactionAPI"
                }
            }
        },
        "model.TransactionPurchaseLineResponse": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TransactionPurchaseLine"
                    }
                },
                "payment": {
                    "$ref": "#/definitions/model.PaymentTransaction"
                },
                "transaction": {
                    "$ref": "#/definitions/model.Transaction"
                }
            }
        },
        "model.TransactionSellLine": {
            "type": "object",
            "properties": {
                "additional": {
                    "type": "string"
                },
                "product_id": {
                    "description": "ProductID ID",
                    "type": "string",
                    "format": "uuid"
                },
                "product_name": {
                    "description": "Product Name",
                    "type": "string",
                    "example": "Samsung"
                },
                "promo_amount": {
                    "type": "number",
                    "example": 10
                },
                "promo_name": {
                    "description": "PromoID         *uuid.UUID `json:\"promo_id,omitempty\" swaggertype:\"string\" format:\"uuid\"` // Promo ID",
                    "type": "string",
                    "example": "10"
                },
                "promo_type": {
                    "description": "Promo Amount",
                    "type": "string",
                    "example": "10"
                },
                "qty": {
                    "description": "Qty",
                    "type": "integer"
                },
                "stock_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "tax_amount": {
                    "type": "number"
                },
                "tax_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "tax_name": {
                    "type": "string"
                },
                "transaction_id": {
                    "description": "Transaction ID",
                    "type": "string",
                    "format": "uuid"
                },
                "unit_price": {
                    "type": "number"
                },
                "unit_price_before": {
                    "type": "number"
                }
            }
        },
        "model.TransactionSellLineAPI": {
            "type": "object",
            "properties": {
                "product_id": {
                    "description": "ProductID ID",
                    "type": "string",
                    "format": "uuid"
                },
                "product_name": {
                    "description": "Product Name",
                    "type": "string",
                    "example": "Samsung"
                },
                "promo_amount": {
                    "type": "number",
                    "example": 10
                },
                "promo_name": {
                    "description": "PromoID         *uuid.UUID `json:\"promo_id,omitempty\" swaggertype:\"string\" format:\"uuid\"` // Promo ID",
                    "type": "string",
                    "example": "10"
                },
                "promo_type": {
                    "description": "Promo Amount",
                    "type": "string",
                    "example": "10"
                },
                "qty": {
                    "description": "Qty",
                    "type": "integer"
                },
                "stock_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "tax_amount": {
                    "type": "number"
                },
                "tax_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "tax_name": {
                    "type": "string"
                },
                "transaction_id": {
                    "description": "Transaction ID",
                    "type": "string",
                    "format": "uuid"
                },
                "unit_price": {
                    "type": "number"
                },
                "unit_price_before": {
                    "type": "number"
                }
            }
        },
        "model.TransactionSellLinePayload": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TransactionSellLineAPI"
                    }
                },
                "payment": {
                    "$ref": "#/definitions/model.PaymentTransactionAPI"
                },
                "transaction": {
                    "$ref": "#/definitions/model.TransactionAPI"
                }
            }
        },
        "model.TransactionSellLineResponse": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TransactionSellLine"
                    }
                },
                "payment_status": {
                    "type": "string"
                },
                "transaction": {
                    "$ref": "#/definitions/model.Transaction"
                }
            }
        },
        "model.TransactionUpdate": {
            "type": "object",
            "properties": {
                "payment": {
                    "$ref": "#/definitions/model.PaymentTransactionAPI"
                },
                "purchase": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TransactionPurchaseLine"
                    }
                },
                "sell": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TransactionSellLine"
                    }
                },
                "transaction": {
                    "$ref": "#/definitions/model.TransactionAPI"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "TokenKey": {
            "type": "apiKey",
            "name": "x-Token",
            "in": "header"
        }
    }
}