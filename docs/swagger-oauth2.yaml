basePath: /api/v1/oauth
definitions:
  lib.Response:
    properties:
      message:
        description: response message
        type: string
      status:
        description: http status
        type: integer
    type: object
  model.ResponseAuthenticate:
    properties:
      Access:
        type: string
      AccessCreateAt:
        type: string
      AccessExpiresIn:
        type: integer
      ClientID:
        type: string
      Code:
        type: string
      CodeChallenge:
        type: string
      CodeChallengeMethod:
        type: string
      CodeCreateAt:
        type: string
      CodeExpiresIn:
        type: integer
      RedirectURI:
        type: string
      Refresh:
        type: string
      RefreshCreateAt:
        type: string
      RefreshExpiresIn:
        type: integer
      Scope:
        type: string
      UserID:
        type: string
    type: object
  model.ResponseToken:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
      refresh_token:
        type: string
      scope:
        type: string
      token_type:
        type: string
    type: object
host: localhost:9096
info:
  contact:
    email: dikhi@tog.co.id
    name: Developer
  description: API Documentation
  termsOfService: https://lab.tog.co.id
  title: Authentication API
  version: 1.0.0
paths:
  /:
    get:
      consumes:
      - application/json
      description: show basic response
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/lib.Response'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/lib.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/lib.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/lib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.Response'
      summary: show basic response
      tags:
      - Index
  /authenticate:
    post:
      consumes:
      - application/json
      description: Authenticate
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseAuthenticate'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/lib.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/lib.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/lib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.Response'
      security:
      - OAuth2Password:
        - write
        - admin
        - read
      summary: Authenticate
      tags:
      - Oauth2
  /development/logs:
    post:
      description: Request Error logs
      parameters:
      - description: Token Key
        in: header
        name: token-key
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/lib.Response'
      summary: Request Error logs
      tags:
      - Development
  /refresh_token:
    post:
      consumes:
      - multipart/form-data
      description: Request Refresh Token
      parameters:
      - description: Grant Type
        enum:
        - refresh_token
        in: query
        name: grant_type
        required: true
        type: string
      - description: Client ID
        in: formData
        name: client_id
        required: true
        type: string
      - description: Client Secret
        in: formData
        name: client_secret
        required: true
        type: string
      - description: Refresh token
        in: formData
        name: refresh_token
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseToken'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/lib.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/lib.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/lib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.Response'
      summary: Request Refresh Token
      tags:
      - Oauth2
  /token:
    post:
      consumes:
      - multipart/form-data
      description: Request Access Token
      parameters:
      - description: Grant Type
        enum:
        - password
        in: query
        name: grant_type
        required: true
        type: string
      - description: Client ID
        in: formData
        name: client_id
        required: true
        type: string
      - description: Client Secret
        in: formData
        name: client_secret
        required: true
        type: string
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ResponseToken'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/lib.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/lib.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/lib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.Response'
      summary: Request Access Token
      tags:
      - Oauth2
schemes:
- http
securityDefinitions:
  OAuth2Password:
    flow: password
    scopes:
      admin: ' Grants read and write access to administrative information'
      read: ' Grants read access'
      write: ' Grants write access'
    tokenUrl: http://localhost:9096/api/v1/oauth/token
    type: oauth2
swagger: "2.0"
